# ------------------------------------------------------------------------------
# Environments
# ------------------------------------------------------------------------------

snippet tm "inline math" wA
\$$1\$ $0
endsnippet

snippet dm "display math" wA
\[
  $1
\] $0
endsnippet

# ------------------------------------------------------------------------------
# Common constants and symbols
# ------------------------------------------------------------------------------

snippet oo "infinity" w
\infty
endsnippet

#snippet 3. "ldots" wA
#\ldots
#endsnippet

snippet eps "var epsilon" i
\varepsilon
endsnippet

snippet del "delta" i
\delta
endsnippet

snippet NN "natural" iA
\N
endsnippet

snippet ZZ "integer" iA
\Z
endsnippet

snippet QQ "rational" iA
\Q
endsnippet

snippet RR "real" iA
\R
endsnippet

snippet CC "complex" iA
\C
endsnippet

snippet FF "field" iA
\F
endsnippet

# ------------------------------------------------------------------------------
# Common math functions
# ------------------------------------------------------------------------------

snippet lni "limit for n to infinity" wA
\lim_{n\to\infty}
endsnippet

snippet seq "sequence" w
{\\{ $1\\}}$0
endsnippet

snippet angle "angle brackets" w
\langle $1\rangle $0
endsnippet

snippet sum "sum" w
\sum_{$1}$0
endsnippet

snippet norm "norm" w
\lVert $1\rVert $0
endsnippet

snippet abs "absolute value" w
\lvert $1\rvert $0
endsnippet

snippet s// "sideways fraction" iA
\\sfrac{$1}{$2}$0
endsnippet

snippet // "fraction" iA
\\frac{$1}{$2}$0
endsnippet

snippet '((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)//' "fraction2" wrA
\\frac{`!p snip.rv = match.group(1)`}{$1}$0
endsnippet

priority 1000
snippet '^.*\)//' "() fraction" wrA
`!p
stripped = match.string[:-1]
depth = 0
i = len(stripped) - 1
while True:
	if stripped[i] == ')': depth += 1
	if stripped[i] == '(': depth -= 1
	if depth == 0: break;
	i -= 1
snip.rv = stripped[0:i] + "\\frac{" + stripped[i+1:-1] + "}"
`{$1}$0
endsnippet

# ------------------------------------------------------------------------------
# Exotic math functions
# ------------------------------------------------------------------------------

snippet sympy "sympy block " w
sympy $1 sympy$0
endsnippet

priority 10000
snippet 'sympy(.*)sympy' "evaluate sympy" wr
`!p
from sympy import *
x, y, z, t = symbols('x y z t')
k, m, n = symbols('k m n', integer=True)
f, g, h = symbols('f g h', cls=Function)
init_printing()
snip.rv = eval('latex(' + match.group(1).replace('\\', '') \
    .replace('^', '**') \
    .replace('{', '(') \
    .replace('}', ')') + ')')
`
endsnippet

# ------------------------------------------------------------------------------
# Sub/superscripts
# ------------------------------------------------------------------------------

snippet '([A-Za-z])(\d)' "auto subscript" wr
`!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
endsnippet

snippet '([A-Za-z])_(\d\d)' "auto subscript2" wr
`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`}
endsnippet

snippet sr "squared" iA
^2
endsnippet

snippet cb "cubed" iA
^3
endsnippet

snippet td "superscript" iA
^{$1}$0
endsnippet

# ------------------------------------------------------------------------------
# Math file template
# ------------------------------------------------------------------------------

snippet mathfile "math file template"
% arara: lualatex: {shell: 1}
%!TeX TS-program=arara
\documentclass{article}
\usepackage[T1]{fontenc}
\usepackage{fontspec}
\usepackage{mathpazo}
\usepackage[margin=1in]{geometry}
\usepackage[inline]{enumitem}
%\usepackage{rotating}
%\usepackage{color}
%\usepackage{tabu}
%\usepackage{parskip}
\usepackage{multicol}
\usepackage{booktabs}
\usepackage{hyperref}
\usepackage{amsmath}
\usepackage{amssymb}
\usepackage{amsthm}
\usepackage{calc}
\usepackage{xfrac}
\usepackage{mathtools}
\usepackage{cancel}
%\usepackage{tikz}
%\usepackage{xcolor-solarized}
\usepackage{minted}
%\usepackage{MnSymbol}
%\usepackage[libertine]{newtxmath}
\newcommand*\circled[1]{\tikz[baseline= (char.base)]{
		\node[shape=circle,draw,inner sep=2pt] (char) {#1};}}
%\usepackage{xy}
%\usepackage[tightpage]{preview} % display
% Math operators
\DeclareMathOperator{\Z}{\mathbb{Z}}
\DeclareMathOperator{\Q}{\mathbb{Q}}
\DeclareMathOperator{\N}{\mathbb{N}}
\DeclareMathOperator{\R}{\mathbb{R}}
%\DeclareMathOperator{\C}{\mathbb{C}}
\DeclareMathOperator{\sge}{\mathsf{e}}
\DeclareMathOperator{\sgm}{\mathsf{m}}
\DeclareMathOperator{\sgG}{\mathsf{G}}
\DeclareMathOperator{\sgg}{\mathsf{g}}
\DeclareMathOperator{\sgF}{\mathsf{F}}
\DeclareMathOperator{\sgt}{\mathsf{t}}
\DeclareMathOperator{\sgL}{\mathsf{L}}
\DeclareMathOperator{\sgZ}{\mathsf{Z}}
\DeclareMathOperator{\sgAp}{Ap}
\DeclareMathOperator{\sgPF}{PF}
\DeclareMathOperator{\sgconv}{conv}
\DeclareMathOperator{\sgdeg}{deg}
\DeclareMathOperator{\calO}{\mathcal{O}}
\def\lp{\lambda_{+}}
\def\lm{\lambda_{-}}
% Theorem environments
\theoremstyle{plain}
\newtheorem*{thm}{Theorem}
\newtheorem*{lemma}{Lemma}
\newtheorem*{claim}{Claim}
\newtheorem*{cor}{Corollary}
\newtheorem*{prop}{Proposition}
\newtheorem*{conj}{Conjecture}
\theoremstyle{remark}
\newtheorem*{example}{Example}
\theoremstyle{definition}
\newtheorem*{definition}{Definition}
% Paired math operators
\DeclarePairedDelimiter{\ceil}{\lceil}{\rceil}
\DeclarePairedDelimiter{\floor}{\lfloor}{\rfloor}
% Math helper functions
\newcommand{\congr}[2]{{[#1]}_{#2}}
\newcommand{\set}[1]{\{#1\}}
\newcommand{\genset}[1]{{\langle{}#1\rangle{}}}
\newcommand{\abs}[1]{\lvert{}#1\rvert{}}
\newcommand{\norm}[1]{\lVert{}#1\rVert{}}
\newcommand{\bmx}[1]{\begin{bmatrix}#1\end{bmatrix}}
\newcommand{\pmx}[1]{\begin{pmatrix}#1\end{pmatrix}}
	\newcommand{\sbmx}[1]{{\left[\begin{smallmatrix}#1\end{smallmatrix}\right]}}
\newcommand{\smallxymatrix}[2]{\xymatrix@C-=#1cm@R-=#1cm{#2}}
% Prompt
\newif\ifprompts{}
\promptstrue{}
\newcommand{\prompt}[1]{\ifprompts\textit{Prompt: #1}\fi}
% Style
\setmonofont[Contextuals={Alternate}]{FuraCode Nerd Font}
\renewcommand\labelitemi{\small$\bullet$}
%\usemintedstyle{solarizedlight}
\setminted{frame=lines,framesep=1em,fontsize=\small}
\begin{document}
$0
\end{document}
endsnippet
